// _sass/custom/catppuccin_rouge.scss

// Import the Catppuccin palette from your main theme file

.highlight {
  // General background for the code block. Using surface0 from Catppuccin.
  background-color: #1e1e2e;
  color: $catppuccin-text;
}

// Comments
.highlight .c,
.highlight .cm,
.highlight .c1,
.highlight .cs {
  color: $catppuccin-overlay1; // Muted grey for comments
  font-style: italic;
}

// Errors
.highlight .err {
  color: $catppuccin-red; // Bright red for errors
}

// Generic (often default text, but some specific cases)
.highlight .g {
  color: $catppuccin-subtext0; // Lighter grey for generic
}

// Keywords (e.g., `if`, `else`, `function`)
.highlight .k {
  color: $catppuccin-mauve; // Purple for keywords
}

// Literals (general, will be overridden by more specific ones below)
.highlight .l {
  color: $catppuccin-green; // Green for literals
}

// Names (general, will be overridden by more specific ones below)
.highlight .n {
  color: $catppuccin-text; // Default text color for names
}

// Operators (e.g., `+`, `-`, `=`, `!`)
.highlight .o {
  color: $catppuccin-sapphire; // Blue for operators
}

// Other (e.g., escape sequences, special characters)
.highlight .x {
  color: $catppuccin-peach; // Orange for other
}

// Punctuation
.highlight .p {
  color: $catppuccin-subtext1; // Subtext color for punctuation
}

// Specific comment types
.highlight .cm {
  color: $catppuccin-overlay1;
} // comment.multiline
.highlight .cp {
  color: $catppuccin-mauve;
} // comment.preproc
.highlight .c1 {
  color: $catppuccin-overlay1;
} // comment.single
.highlight .cs {
  color: $catppuccin-mauve;
} // comment.special

// Generic types
.highlight .gd {
  color: $catppuccin-red;
} // generic.deleted
.highlight .ge {
  font-style: italic;
  color: $catppuccin-subtext0;
} // generic.emph
.highlight .gr {
  color: $catppuccin-red;
} // generic.error
.highlight .gh {
  color: $catppuccin-blue;
} // generic.heading
.highlight .gi {
  color: $catppuccin-green;
} // generic.inserted
.highlight .go {
  color: $catppuccin-overlay1;
} // generic.output
.highlight .gp {
  color: $catppuccin-subtext0;
} // generic.prompt
.highlight .gs {
  font-weight: bold;
  color: $catppuccin-text;
} // generic.strong
.highlight .gu {
  color: $catppuccin-teal;
} // generic.subheading
.highlight .gt {
  color: $catppuccin-red;
} // generic.traceback

// Specific keyword types
.highlight .kc {
  color: $catppuccin-peach;
} // keyword.constant
.highlight .kd {
  color: $catppuccin-blue;
} // keyword.declaration
.highlight .kn {
  color: $catppuccin-mauve;
} // keyword.namespace
.highlight .kp {
  color: $catppuccin-mauve;
} // keyword.pseudo
.highlight .kr {
  color: $catppuccin-blue;
} // keyword.reserved
.highlight .kt {
  color: $catppuccin-teal;
} // keyword.type

// Specific literal types
.highlight .ld {
  color: $catppuccin-green;
} // literal.date
.highlight .m {
  color: $catppuccin-peach;
} // literal.number (general, will be overridden)
.highlight .s {
  color: $catppuccin-green;
} // literal.string (general, will be overridden)

// Specific name types
.highlight .na {
  color: $catppuccin-blue;
} // name.attribute
.highlight .nb {
  color: $catppuccin-yellow;
} // name.builtin
.highlight .nc {
  color: $catppuccin-yellow;
} // name.class
.highlight .no {
  color: $catppuccin-lavender;
} // name.constant
.highlight .nd {
  color: $catppuccin-mauve;
} // name.decorator
.highlight .ni {
  color: $catppuccin-text;
} // name.entity
.highlight .ne {
  color: $catppuccin-red;
} // name.exception
.highlight .nf {
  color: $catppuccin-blue;
} // name.function
.highlight .nl {
  color: $catppuccin-mauve;
} // name.label
.highlight .nn {
  color: $catppuccin-yellow;
} // name.namespace
.highlight .nx {
  color: $catppuccin-text;
} // name.other
.highlight .py {
  color: $catppuccin-text;
} // name.property
.highlight .nt {
  color: $catppuccin-red;
} // name.tag
.highlight .nv {
  color: $catppuccin-blue;
} // name.variable

// Specific operator types
.highlight .ow {
  color: $catppuccin-mauve;
} // operator.word

// Whitespace
.highlight .w {
  color: $catppuccin-subtext0;
} // text.whitespace

// More specific literal.number types
.highlight .mf {
  color: $catppuccin-peach;
} // literal.number.float
.highlight .mh {
  color: $catppuccin-peach;
} // literal.number.hex
.highlight .mi {
  color: $catppuccin-peach;
} // literal.number.integer
.highlight .mo {
  color: $catppuccin-peach;
} // literal.number.oct

// More specific literal.string types
.highlight .sb {
  color: $catppuccin-green;
} // literal.string.backtick
.highlight .sc {
  color: $catppuccin-green;
} // literal.string.char
.highlight .sd {
  color: $catppuccin-green;
} // literal.string.doc
.highlight .s2 {
  color: $catppuccin-green;
} // literal.string.double
.highlight .se {
  color: $catppuccin-peach;
} // literal.string.escape
.highlight .sh {
  color: $catppuccin-green;
} // literal.string.heredoc
.highlight .si {
  color: $catppuccin-green;
} // literal.string.interpol
.highlight .sx {
  color: $catppuccin-green;
} // literal.string.other
.highlight .sr {
  color: $catppuccin-green;
} // literal.string.regex
.highlight .s1 {
  color: $catppuccin-green;
} // literal.string.single
.highlight .ss {
  color: $catppuccin-green;
} // literal.string.symbol

// More specific name.variable types
.highlight .bp {
  color: $catppuccin-blue;
} // name.builtin.pseudo
.highlight .vc {
  color: $catppuccin-blue;
} // name.variable.class
.highlight .vg {
  color: $catppuccin-blue;
} // name.variable.global
.highlight .vi {
  color: $catppuccin-blue;
} // name.variable.instance

// Literal.Number.Integer.Long
.highlight .il {
  color: $catppuccin-peach;
}
